// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;
RWTexture3D<float4> Data;

RWStructuredBuffer<int> _CountedBins;
int _BinNum;
float _Delta;

// Helper functions

void IncreaseYourBin(float density) {
    int bin = (int)ceil(density / _Delta) - 1;
    int _orgVal = 0;
    InterlockedAdd(_CountedBins[bin], 1, _orgVal);
    //_CountedBins[bin] = (int)(100.0 * density);
    //InterlockedAdd(_CountedBins[bin], density, _orgVal);
}

// End helper functions






[numthreads(8,8,8)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    IncreaseYourBin(Data[id.xyz]);
}
